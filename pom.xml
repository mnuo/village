<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.seek</groupId>
  <artifactId>village</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>village</name>
  <description>the seek village j2ee</description>
  <url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- 编译jdk版本 -->
		<jdk.version>1.8</jdk.version>
		<junit.version>4.12</junit.version>
		<!-- 依赖版本 -->
		<servlet.version>3.0.1</servlet.version>
        <log4j2.version>2.8.2</log4j2.version>
        <spring.version>4.3.8.RELEASE</spring.version>
        <mybaitsplus.version>2.0.8</mybaitsplus.version>
        <mysql.version>5.1.40</mysql.version>
        <druid.version>1.0.29</druid.version>
        <shiro.version>1.3.2</shiro.version>
        <ehcache.version>2.6.11</ehcache.version>
        <jackson.version>2.8.8</jackson.version>
        <commons-io.version>2.5</commons-io.version>
        <hibernate-validator.version>5.3.5.Final</hibernate-validator.version>
        <poi.version>3.16</poi.version>
	</properties>
	<dependencies>
		<!-- junit -->
		 <!-- test begin -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>3.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.el</artifactId>
            <version>3.0.0</version>
            <scope>test</scope>
        </dependency>
        <!-- web begin -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
        <!-- web end -->
		<!-- log4j2 begin -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <!-- log4j2 end -->
		<!-- Spring begin -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-messaging</artifactId>
			<!-- <version>4.0.5.RELEASE</version> -->
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-websocket</artifactId>
			<!-- <version>4.0.5.RELEASE</version> -->
		</dependency>
        <!-- spring end -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <!-- Mybatis-Plus -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus</artifactId>
            <version>${mybaitsplus.version}</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid.version}</version>
        </dependency>
        <!-- jackson begin -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!-- jackson end -->
        <!-- shiro begin -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>${shiro.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- shiro end -->
        <!-- hibernate-validator -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>
        <!-- poi provided 不强制依赖 -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${poi.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- ehcache和redis必选其一，也可同时使用（需要注意） -->
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>${ehcache.version}</version>
        </dependency>
        <!-- redis
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
            <version>1.8.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
            <version>2.4.2</version>
        </dependency>
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.9.0</version>
        </dependency>
         -->
		<!-- fastjson -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.41</version>
		</dependency>
		
		<!-- qrcode -->
		<dependency>
		    <groupId>com.google.zxing</groupId>
		    <artifactId>core</artifactId>
		    <version>3.3.0</version>
		</dependency>
		<dependency>
		    <groupId>com.google.zxing</groupId>
		    <artifactId>javase</artifactId>
		    <version>3.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.3.1</version>
		</dependency>
		<!-- easypoi -->
		<dependency>
			<groupId>org.jeecg</groupId>
			<artifactId>easypoi-base</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.jeecg</groupId>
			<artifactId>easypoi-web</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.jeecg</groupId>
			<artifactId>easypoi-annotation</artifactId>
			<version>2.3.1</version>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${spring.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
    <repositories>
         <repository>
             <id>aliyun</id>
             <name>aliyun</name>
             <url>http://maven.aliyun.com/nexus/content/groups/public</url>
         </repository>
    </repositories>
	<build>
        <finalName>village</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <!-- <resource>
                <directory>src/main/conf/${profiles.active}</directory>
            </resource> -->
        </resources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		    <plugin>
		      <groupId>org.eclipse.jetty</groupId>
		      <artifactId>jetty-maven-plugin</artifactId>
		      <version>9.2.8.v20150217</version>
			  <configuration>           
				   <!-- <scanIntervalSeconds>10</scanIntervalSeconds> --><!-- 热部署时间间隔 -->
				   <reload>manual</reload><!-- 在控制台回车,重启工程 -->
				   <httpConnector>
				     <port>80</port><!-- 端口 -->
				   </httpConnector>   
			  </configuration>
		    </plugin>
			<plugin> 
		    	<groupId>org.mybatis.generator</groupId> 
		    	<artifactId>mybatis-generator-maven-plugin</artifactId> 
		   		<version>1.3.2</version> 
		        <configuration>
                	<!--配置文件的路径-->
                     <configurationFile>${basedir}/src/main/resources/dev/generatorConfig.xml</configurationFile> 
                     <overwrite>true</overwrite>
                </configuration>
			</plugin> 
		</plugins>
	</build>
    <!-- <profiles>
        默认激活 dev 开发环境
        production使用 mvn xxx -Pproduction
        <profile>
            本地开发环境
            <id>development</id>
            <properties>
                <profiles.active>dev</profiles.active>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            生产环境
            <id>production</id>
            <properties>
                <profiles.active>prod</profiles.active>
            </properties>
        </profile>
    </profiles> -->
</project>